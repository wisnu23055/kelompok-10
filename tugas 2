# Hurdle 1

def turn_right():
    turn_left()
    turn_left()
    turn_left()
def step():
    move()
    turn_left()
    move()

    turn_right()
    move()
    turn_right()
    move()
    turn_left()
step()
step()
step()
step()
step()
step()


# Hurdle 2

def turn_right():
   turn_left()
   turn_left()
   turn_left()


def lompat():
   move()
   turn_left() 
   move()
   turn_right()
   move()
   turn_right()
   move()
   turn_left()
    
while at_goal()==False:
    lompat()

# Hurdle 3

def turn_right():
    turn_left()
    turn_left()
    turn_left()

def lompat():
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()
    
while at_goal() ==False:
    if wall_in_front(): 
       lompat()
    elif not wall_in_front():
        move()

# Hurdle 4

def turn_right():                       
    for i in range(3):  # Mengubah menjadi perulangan yang tepat untuk membuat putaran ke kanan
        turn_left()

def jump():
    turn_left()
    while wall_on_right() and not at_goal():  # Menambahkan kondisi agar berhenti jika sudah di tujuan
        if wall_in_front():
            turn_left()
            move()
        else:
            move()

# Maze

def turn_right():
    turn_left()
    turn_left()            
    turn_left()

while front_is_clear():
    move()
turn_left()

while not at_goal():
    if right_is_clear():
        turn_right()
        move()
    elif front_is_clear():
        move()
    else:
        turn_left()

       
